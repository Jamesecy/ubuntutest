:ruby
  model_config = RailsAdmin::Config.model(Setup::Model)
  abstract_model = model_config.abstract_model
  require 'rails_admin/config/fields/types/datetime.rb'
  query = params[:query]
  params = request.params.except(:authenticity_token, :action, :controller, :utf8, :bulk_export, :_pjax)
  params.delete(:query) if params[:query].blank?
  params.delete(:sort_reverse) unless params[:sort_reverse] == 'true'
  sort_reverse = params[:sort_reverse]
  sort = params[:sort]
  params.delete(:sort) if params[:sort] == model_config.list.sort_by.to_s
  description = model_config.description
  properties = [{name: :title, label: 'Model'}, {name: :used_memory, label: 'Used memory'}]

%h4="Total memory usage: #{number_to_human_size(Setup::Model.all.inject(0) { |sum, model| sum + model.used_memory })}"

#list
  = form_tag(memory_usage_path(params.except(*%w[page f query])), method: :get, class: 'pjax-form form-inline') do
    .well
      %input.input-small{name: "query", type: "search", value: query, placeholder: t('admin.misc.filter')}
      %button.btn.btn-primary{type: "submit", :'data-disable-with' => "<i class='icon-white icon-refresh'></i> ".html_safe + t("admin.misc.refresh")}
        %i.icon-white.icon-refresh
        = t("admin.misc.refresh")

  = form_tag(memory_usage_path, method: :post) do
    - if description.present?
      <b>#{description}</b>
    %table.table.table-condensed.table-striped
      %thead
        %tr
          - properties.each do |property|
            - selected = (sort == property[:name].to_s)
            - sort_location = memory_usage_path params.except('sort_reverse').except('page').merge(sort: property[:name]).merge(selected && sort_reverse != 'true' ? {sort_reverse: 'true'} : {})
            - sort_direction = (sort_reverse == 'true' ? "headerSortUp" : "headerSortDown" if selected)
            %th{class: "header pjax #{sort_direction if sort_direction}", :'data-href' => sort_location}= capitalize_first_letter(property[:label])
          %th.last.shrink
      %tbody
        - @objects.each do |object|
          %tr{class: "#{abstract_model.param_key}_row"}
            %td
              - object_path = rails_admin.show_path(model_name: object.class.to_s.underscore.gsub('/', '~'), id: object.id.to_s)
              %span.show= link_to capitalize_first_letter(object.title), object_path, class: 'pjax'
            %td
              - count = object.used_memory
              - percent = count > 0 ? (@max <= 1 ? count : ((Math.log(count+1) * 100.0) / Math.log(@max+1)).to_i) : -1
              .progress{style: "margin-bottom:0px", class: "progress-#{get_indicator(percent)}"  }
                .bar.animate-width-to{:'data-animate-length' => ([1.0, percent].max.to_i * 20), :'data-animate-width-to' => "#{[2.0, percent].max.to_i}%", style: "width:2%"}
                  = number_to_human_size(count)
            %td.last.links
              %ul.inline= menu_for :member, abstract_model, object, true
    - if @objects.respond_to?(:total_count)
      - total_count = @objects.total_count.to_i
      = paginate(@objects, theme: 'twitter-bootstrap', remote: true)
      = link_to(t("admin.misc.show_all"), memory_usage_path(params.merge(all: true)), class: "show-all btn clearfix pjax") unless total_count > 100 || total_count <= @objects.to_a.size
      .clearfix.total-count= "#{total_count} #{properties[0][:name].to_s.pluralize(total_count).downcase}"
    - else
      .clearfix.total-count= "#{@objects.size} #{properties[0][:name].to_s.pluralize(@objects.size).downcase}"
